001. Layer: model.model.0.conv, Output Shape: torch.Size([32, 1, 256, 256])
002. Layer: model.model.0.conv.unit0, Output Shape: torch.Size([32, 1, 256, 256])
003. Layer: model.model.0.conv.unit0.conv, Output Shape: torch.Size([32, 1, 256, 256])
004. Layer: model.model.0.conv.unit0.adn, Output Shape: torch.Size([32, 16, 128, 128])
005. Layer: model.model.0.conv.unit0.adn.N, Output Shape: torch.Size([32, 16, 128, 128])
006. Layer: model.model.0.conv.unit0.adn.D, Output Shape: torch.Size([32, 16, 128, 128])
007. Layer: model.model.0.conv.unit0.adn.A, Output Shape: torch.Size([32, 16, 128, 128])
008. Layer: model.model.0.conv.unit1, Output Shape: torch.Size([32, 16, 128, 128])
009. Layer: model.model.0.conv.unit1.conv, Output Shape: torch.Size([32, 16, 128, 128])
010. Layer: model.model.0.conv.unit1.adn, Output Shape: torch.Size([32, 16, 128, 128])
011. Layer: model.model.0.conv.unit1.adn.N, Output Shape: torch.Size([32, 16, 128, 128])
012. Layer: model.model.0.conv.unit1.adn.D, Output Shape: torch.Size([32, 16, 128, 128])
013. Layer: model.model.0.conv.unit1.adn.A, Output Shape: torch.Size([32, 16, 128, 128])
014. Layer: model.model.0.conv.unit2, Output Shape: torch.Size([32, 16, 128, 128])
015. Layer: model.model.0.conv.unit2.conv, Output Shape: torch.Size([32, 16, 128, 128])
016. Layer: model.model.0.conv.unit2.adn, Output Shape: torch.Size([32, 16, 128, 128])
017. Layer: model.model.0.conv.unit2.adn.N, Output Shape: torch.Size([32, 16, 128, 128])
018. Layer: model.model.0.conv.unit2.adn.D, Output Shape: torch.Size([32, 16, 128, 128])
019. Layer: model.model.0.conv.unit2.adn.A, Output Shape: torch.Size([32, 16, 128, 128])
020. Layer: model.model.0.conv.unit3, Output Shape: torch.Size([32, 16, 128, 128])
021. Layer: model.model.0.conv.unit3.conv, Output Shape: torch.Size([32, 16, 128, 128])
022. Layer: model.model.0.conv.unit3.adn, Output Shape: torch.Size([32, 16, 128, 128])
023. Layer: model.model.0.conv.unit3.adn.N, Output Shape: torch.Size([32, 16, 128, 128])
024. Layer: model.model.0.conv.unit3.adn.D, Output Shape: torch.Size([32, 16, 128, 128])
025. Layer: model.model.0.conv.unit3.adn.A, Output Shape: torch.Size([32, 16, 128, 128])
026. Layer: model.model.1.submodule.0.conv, Output Shape: torch.Size([32, 16, 128, 128])
027. Layer: model.model.1.submodule.0.conv.unit0, Output Shape: torch.Size([32, 16, 128, 128])
028. Layer: model.model.1.submodule.0.conv.unit0.conv, Output Shape: torch.Size([32, 16, 128, 128])
029. Layer: model.model.1.submodule.0.conv.unit0.adn, Output Shape: torch.Size([32, 32, 64, 64])
030. Layer: model.model.1.submodule.0.conv.unit0.adn.N, Output Shape: torch.Size([32, 32, 64, 64])
031. Layer: model.model.1.submodule.0.conv.unit0.adn.D, Output Shape: torch.Size([32, 32, 64, 64])
032. Layer: model.model.1.submodule.0.conv.unit0.adn.A, Output Shape: torch.Size([32, 32, 64, 64])
033. Layer: model.model.1.submodule.0.conv.unit1, Output Shape: torch.Size([32, 32, 64, 64])
034. Layer: model.model.1.submodule.0.conv.unit1.conv, Output Shape: torch.Size([32, 32, 64, 64])
035. Layer: model.model.1.submodule.0.conv.unit1.adn, Output Shape: torch.Size([32, 32, 64, 64])
036. Layer: model.model.1.submodule.0.conv.unit1.adn.N, Output Shape: torch.Size([32, 32, 64, 64])
037. Layer: model.model.1.submodule.0.conv.unit1.adn.D, Output Shape: torch.Size([32, 32, 64, 64])
038. Layer: model.model.1.submodule.0.conv.unit1.adn.A, Output Shape: torch.Size([32, 32, 64, 64])
039. Layer: model.model.1.submodule.0.conv.unit2, Output Shape: torch.Size([32, 32, 64, 64])
040. Layer: model.model.1.submodule.0.conv.unit2.conv, Output Shape: torch.Size([32, 32, 64, 64])
041. Layer: model.model.1.submodule.0.conv.unit2.adn, Output Shape: torch.Size([32, 32, 64, 64])
042. Layer: model.model.1.submodule.0.conv.unit2.adn.N, Output Shape: torch.Size([32, 32, 64, 64])
043. Layer: model.model.1.submodule.0.conv.unit2.adn.D, Output Shape: torch.Size([32, 32, 64, 64])
044. Layer: model.model.1.submodule.0.conv.unit2.adn.A, Output Shape: torch.Size([32, 32, 64, 64])
045. Layer: model.model.1.submodule.0.conv.unit3, Output Shape: torch.Size([32, 32, 64, 64])
046. Layer: model.model.1.submodule.0.conv.unit3.conv, Output Shape: torch.Size([32, 32, 64, 64])
047. Layer: model.model.1.submodule.0.conv.unit3.adn, Output Shape: torch.Size([32, 32, 64, 64])
048. Layer: model.model.1.submodule.0.conv.unit3.adn.N, Output Shape: torch.Size([32, 32, 64, 64])
049. Layer: model.model.1.submodule.0.conv.unit3.adn.D, Output Shape: torch.Size([32, 32, 64, 64])
050. Layer: model.model.1.submodule.0.conv.unit3.adn.A, Output Shape: torch.Size([32, 32, 64, 64])
051. Layer: model.model.1.submodule.1.submodule.0.conv, Output Shape: torch.Size([32, 32, 64, 64])
052. Layer: model.model.1.submodule.1.submodule.0.conv.unit0, Output Shape: torch.Size([32, 32, 64, 64])
053. Layer: model.model.1.submodule.1.submodule.0.conv.unit0.conv, Output Shape: torch.Size([32, 32, 64, 64])
054. Layer: model.model.1.submodule.1.submodule.0.conv.unit0.adn, Output Shape: torch.Size([32, 64, 32, 32])
055. Layer: model.model.1.submodule.1.submodule.0.conv.unit0.adn.N, Output Shape: torch.Size([32, 64, 32, 32])
056. Layer: model.model.1.submodule.1.submodule.0.conv.unit0.adn.D, Output Shape: torch.Size([32, 64, 32, 32])
057. Layer: model.model.1.submodule.1.submodule.0.conv.unit0.adn.A, Output Shape: torch.Size([32, 64, 32, 32])
058. Layer: model.model.1.submodule.1.submodule.0.conv.unit1, Output Shape: torch.Size([32, 64, 32, 32])
059. Layer: model.model.1.submodule.1.submodule.0.conv.unit1.conv, Output Shape: torch.Size([32, 64, 32, 32])
060. Layer: model.model.1.submodule.1.submodule.0.conv.unit1.adn, Output Shape: torch.Size([32, 64, 32, 32])
061. Layer: model.model.1.submodule.1.submodule.0.conv.unit1.adn.N, Output Shape: torch.Size([32, 64, 32, 32])
062. Layer: model.model.1.submodule.1.submodule.0.conv.unit1.adn.D, Output Shape: torch.Size([32, 64, 32, 32])
063. Layer: model.model.1.submodule.1.submodule.0.conv.unit1.adn.A, Output Shape: torch.Size([32, 64, 32, 32])
064. Layer: model.model.1.submodule.1.submodule.0.conv.unit2, Output Shape: torch.Size([32, 64, 32, 32])
065. Layer: model.model.1.submodule.1.submodule.0.conv.unit2.conv, Output Shape: torch.Size([32, 64, 32, 32])
066. Layer: model.model.1.submodule.1.submodule.0.conv.unit2.adn, Output Shape: torch.Size([32, 64, 32, 32])
067. Layer: model.model.1.submodule.1.submodule.0.conv.unit2.adn.N, Output Shape: torch.Size([32, 64, 32, 32])
068. Layer: model.model.1.submodule.1.submodule.0.conv.unit2.adn.D, Output Shape: torch.Size([32, 64, 32, 32])
069. Layer: model.model.1.submodule.1.submodule.0.conv.unit2.adn.A, Output Shape: torch.Size([32, 64, 32, 32])
070. Layer: model.model.1.submodule.1.submodule.0.conv.unit3, Output Shape: torch.Size([32, 64, 32, 32])
071. Layer: model.model.1.submodule.1.submodule.0.conv.unit3.conv, Output Shape: torch.Size([32, 64, 32, 32])
072. Layer: model.model.1.submodule.1.submodule.0.conv.unit3.adn, Output Shape: torch.Size([32, 64, 32, 32])
073. Layer: model.model.1.submodule.1.submodule.0.conv.unit3.adn.N, Output Shape: torch.Size([32, 64, 32, 32])
074. Layer: model.model.1.submodule.1.submodule.0.conv.unit3.adn.D, Output Shape: torch.Size([32, 64, 32, 32])
075. Layer: model.model.1.submodule.1.submodule.0.conv.unit3.adn.A, Output Shape: torch.Size([32, 64, 32, 32])
076. Layer: model.model.1.submodule.1.submodule.1.submodule.conv, Output Shape: torch.Size([32, 64, 32, 32])
077. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit0, Output Shape: torch.Size([32, 64, 32, 32])
078. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit0.conv, Output Shape: torch.Size([32, 64, 32, 32])
079. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit0.adn, Output Shape: torch.Size([32, 128, 32, 32])
080. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit0.adn.N, Output Shape: torch.Size([32, 128, 32, 32])
081. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit0.adn.D, Output Shape: torch.Size([32, 128, 32, 32])
082. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit0.adn.A, Output Shape: torch.Size([32, 128, 32, 32])
083. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit1, Output Shape: torch.Size([32, 128, 32, 32])
084. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit1.conv, Output Shape: torch.Size([32, 128, 32, 32])
085. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit1.adn, Output Shape: torch.Size([32, 128, 32, 32])
086. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit1.adn.N, Output Shape: torch.Size([32, 128, 32, 32])
087. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit1.adn.D, Output Shape: torch.Size([32, 128, 32, 32])
088. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit1.adn.A, Output Shape: torch.Size([32, 128, 32, 32])
089. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit2, Output Shape: torch.Size([32, 128, 32, 32])
090. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit2.conv, Output Shape: torch.Size([32, 128, 32, 32])
091. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit2.adn, Output Shape: torch.Size([32, 128, 32, 32])
092. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit2.adn.N, Output Shape: torch.Size([32, 128, 32, 32])
093. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit2.adn.D, Output Shape: torch.Size([32, 128, 32, 32])
094. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit2.adn.A, Output Shape: torch.Size([32, 128, 32, 32])
095. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit3, Output Shape: torch.Size([32, 128, 32, 32])
096. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit3.conv, Output Shape: torch.Size([32, 128, 32, 32])
097. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit3.adn, Output Shape: torch.Size([32, 128, 32, 32])
098. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit3.adn.N, Output Shape: torch.Size([32, 128, 32, 32])
099. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit3.adn.D, Output Shape: torch.Size([32, 128, 32, 32])
100. Layer: model.model.1.submodule.1.submodule.1.submodule.conv.unit3.adn.A, Output Shape: torch.Size([32, 128, 32, 32])
101. Layer: model.model.1.submodule.1.submodule.2.0.conv, Output Shape: torch.Size([32, 192, 32, 32]) <------------------- BOTTLENECK (?)
102. Layer: model.model.1.submodule.1.submodule.2.1.conv, Output Shape: torch.Size([32, 32, 64, 64])
103. Layer: model.model.1.submodule.1.submodule.2.1.conv.unit0, Output Shape: torch.Size([32, 32, 64, 64])
104. Layer: model.model.1.submodule.1.submodule.2.1.conv.unit0.conv, Output Shape: torch.Size([32, 32, 64, 64])
105. Layer: model.model.1.submodule.1.submodule.2.1.conv.unit0.adn, Output Shape: torch.Size([32, 32, 64, 64])
106. Layer: model.model.1.submodule.1.submodule.2.1.conv.unit0.adn.N, Output Shape: torch.Size([32, 32, 64, 64])
107. Layer: model.model.1.submodule.1.submodule.2.1.conv.unit0.adn.D, Output Shape: torch.Size([32, 32, 64, 64])
108. Layer: model.model.1.submodule.1.submodule.2.1.conv.unit0.adn.A, Output Shape: torch.Size([32, 32, 64, 64])
109. Layer: model.model.1.submodule.2.0.conv, Output Shape: torch.Size([32, 64, 64, 64])
110. Layer: model.model.1.submodule.2.1.conv, Output Shape: torch.Size([32, 16, 128, 128])
111. Layer: model.model.1.submodule.2.1.conv.unit0, Output Shape: torch.Size([32, 16, 128, 128])
112. Layer: model.model.1.submodule.2.1.conv.unit0.conv, Output Shape: torch.Size([32, 16, 128, 128])
113. Layer: model.model.1.submodule.2.1.conv.unit0.adn, Output Shape: torch.Size([32, 16, 128, 128])
114. Layer: model.model.1.submodule.2.1.conv.unit0.adn.N, Output Shape: torch.Size([32, 16, 128, 128])
115. Layer: model.model.1.submodule.2.1.conv.unit0.adn.D, Output Shape: torch.Size([32, 16, 128, 128])
116. Layer: model.model.1.submodule.2.1.conv.unit0.adn.A, Output Shape: torch.Size([32, 16, 128, 128])
117. Layer: model.model.2.0.conv, Output Shape: torch.Size([32, 32, 128, 128])
118. Layer: model.model.2.1.conv, Output Shape: torch.Size([32, 4, 256, 256])
119. Layer: model.model.2.1.conv.unit0, Output Shape: torch.Size([32, 4, 256, 256])
120. Layer: model.model.2.1.conv.unit0.conv, Output Shape: torch.Size([32, 4, 256, 256])